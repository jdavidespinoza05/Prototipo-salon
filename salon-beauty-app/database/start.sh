#!/bin/bash

# ==================================================
# Script de Inicio R√°pido
# Sal√≥n de Belleza - Sistema de Fidelidad
# ==================================================

set -e

# Colores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

clear

echo -e "${BLUE}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                               ‚ïë
‚ïë        SISTEMA DE FIDELIDAD - SAL√ìN DE BELLEZA                ‚ïë
‚ïë                                                               ‚ïë
‚ïë              Instalaci√≥n y Configuraci√≥n R√°pida               ‚ïë
‚ïë                                                               ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

echo ""
echo -e "${GREEN}Bienvenido a la instalaci√≥n del Sistema de Fidelidad${NC}"
echo ""

# Funci√≥n para verificar Docker
check_docker() {
    echo -e "${BLUE}[1/5]${NC} Verificando Docker..."
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}‚ùå Docker no est√° instalado${NC}"
        echo "Por favor, instala Docker desde: https://docs.docker.com/get-docker/"
        exit 1
    fi
    
    if ! docker info &> /dev/null; then
        echo -e "${RED}‚ùå Docker no est√° corriendo${NC}"
        echo "Por favor, inicia Docker Desktop o el servicio de Docker"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Docker est√° instalado y corriendo${NC}"
}

# Funci√≥n para verificar Docker Compose
check_docker_compose() {
    echo -e "${BLUE}[2/5]${NC} Verificando Docker Compose..."
    if ! command -v docker-compose &> /dev/null; then
        echo -e "${RED}‚ùå Docker Compose no est√° instalado${NC}"
        echo "Por favor, instala Docker Compose"
        exit 1
    fi
    echo -e "${GREEN}‚úÖ Docker Compose est√° instalado${NC}"
}

# Funci√≥n para crear archivo .env si no existe
create_env() {
    echo -e "${BLUE}[3/5]${NC} Configurando variables de entorno..."
    if [ ! -f ".env" ]; then
        cp .env.example .env
        echo -e "${GREEN}‚úÖ Archivo .env creado${NC}"
        echo -e "${YELLOW}‚ö†Ô∏è  Por favor, revisa y ajusta el archivo .env seg√∫n tus necesidades${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  El archivo .env ya existe, saltando...${NC}"
    fi
}

# Funci√≥n para levantar contenedores
start_containers() {
    echo -e "${BLUE}[4/5]${NC} Iniciando contenedores..."
    echo "Esto puede tomar varios minutos la primera vez..."
    echo ""
    
    docker-compose up -d
    
    echo ""
    echo -e "${GREEN}‚úÖ Contenedores iniciados${NC}"
}

# Funci√≥n para esperar a Oracle
wait_oracle() {
    echo -e "${BLUE}[5/5]${NC} Esperando a que Oracle est√© listo..."
    echo "Esto puede tomar 5-10 minutos la primera vez..."
    echo ""
    
    local max_attempts=120
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if docker logs oracle-salon-belleza 2>&1 | grep -q "DATABASE IS READY TO USE"; then
            echo ""
            echo -e "${GREEN}‚úÖ Oracle est√° listo!${NC}"
            return 0
        fi
        echo -ne "Esperando... (${attempt}/${max_attempts})\r"
        sleep 5
        attempt=$((attempt + 1))
    done
    
    echo ""
    echo -e "${RED}‚ùå Timeout esperando a Oracle${NC}"
    return 1
}

# Funci√≥n para inicializar la base de datos
init_database() {
    echo ""
    echo -e "${BLUE}Inicializando base de datos...${NC}"
    echo ""
    
    ./init_db.sh << EOF
1

EOF
}

# Funci√≥n para mostrar informaci√≥n final
show_info() {
    echo ""
    echo -e "${GREEN}"
    cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                               ‚ïë
‚ïë                 ¬°INSTALACI√ìN COMPLETADA!                      ‚ïë
‚ïë                                                               ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    
    echo -e "${BLUE}üìä Informaci√≥n de Conexi√≥n:${NC}"
    echo ""
    echo "   Base de Datos Oracle:"
    echo "   ‚îú‚îÄ Host: localhost"
    echo "   ‚îú‚îÄ Puerto: 1521"
    echo "   ‚îú‚îÄ SID: XE"
    echo "   ‚îú‚îÄ Usuario: salon_user"
    echo "   ‚îî‚îÄ Password: salon_pass123"
    echo ""
    echo "   URL de Conexi√≥n:"
    echo "   ‚îî‚îÄ jdbc:oracle:thin:@localhost:1521:XE"
    echo ""
    
    echo -e "${BLUE}üîß Comandos √ötiles:${NC}"
    echo ""
    echo "   Ver logs de Oracle:"
    echo "   ‚îî‚îÄ docker logs oracle-salon-belleza -f"
    echo ""
    echo "   Conectarse a SQLPlus:"
    echo "   ‚îî‚îÄ docker exec -it oracle-salon-belleza sqlplus salon_user/salon_pass123@XE"
    echo ""
    echo "   Gestionar base de datos:"
    echo "   ‚îî‚îÄ ./init_db.sh"
    echo ""
    echo "   Detener contenedores:"
    echo "   ‚îî‚îÄ docker-compose down"
    echo ""
    echo "   Reiniciar contenedores:"
    echo "   ‚îî‚îÄ docker-compose restart"
    echo ""
    
    echo -e "${BLUE}üìö Documentaci√≥n:${NC}"
    echo ""
    echo "   README.md              - Documentaci√≥n general"
    echo "   DIAGRAMA_ER.md         - Diagrama de base de datos"
    echo "   GUIA_CONEXION.md       - Gu√≠as de conexi√≥n"
    echo "   queries_utiles.sql     - Consultas de ejemplo"
    echo ""
    
    echo -e "${BLUE}üéØ Pr√≥ximos Pasos:${NC}"
    echo ""
    echo "   1. Revisa el archivo README.md"
    echo "   2. Conecta tu aplicaci√≥n Angular al backend"
    echo "   3. Desarrolla los servicios REST API"
    echo "   4. Personaliza la configuraci√≥n en .env"
    echo ""
    
    echo -e "${GREEN}¬°Listo para comenzar a desarrollar! üöÄ${NC}"
    echo ""
}

# Script principal
main() {
    check_docker
    check_docker_compose
    create_env
    start_containers
    wait_oracle
    
    echo ""
    read -p "¬øDeseas inicializar la base de datos ahora? (S/n): " -n 1 -r
    echo ""
    
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        init_database
    else
        echo -e "${YELLOW}Puedes inicializar la base de datos m√°s tarde ejecutando: ./init_db.sh${NC}"
    fi
    
    show_info
}

# Ejecutar
main
